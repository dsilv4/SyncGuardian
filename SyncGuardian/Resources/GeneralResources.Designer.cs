//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyncGuardian.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GeneralResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GeneralResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SyncGuardian.Resources.GeneralResources", typeof(GeneralResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SyncGuardian ver 1.0 \nAuthor: Carlos Silva.
        /// </summary>
        internal static string ABOUT {
            get {
                return ResourceManager.GetString("ABOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SyncGuardian.
        /// </summary>
        internal static string APP_NAME {
            get {
                return ResourceManager.GetString("APP_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your no-frills backup solution that simply  does what needs to be done.
        /// </summary>
        internal static string APP_SMALL_DESCRIPTION {
            get {
                return ResourceManager.GetString("APP_SMALL_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, insert the backup folder&apos;s path. Exemple D:\MyBackupFolder\ or D:\My Backup Folder.
        /// </summary>
        internal static string ASK_BACKUP_DIRECTORY {
            get {
                return ResourceManager.GetString("ASK_BACKUP_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path is not valid, please verify and insert a valid path..
        /// </summary>
        internal static string ASK_DIRECTORY_ERROR {
            get {
                return ResourceManager.GetString("ASK_DIRECTORY_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please write &quot;delete&quot; if you want to delete the files and folders thar are non existent in the source folder..
        /// </summary>
        internal static string ASK_IS_DELETE {
            get {
                return ResourceManager.GetString("ASK_IS_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string ASK_IS_DELETE_ERROR {
            get {
                return ResourceManager.GetString("ASK_IS_DELETE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, insert the source folder&apos;s path. Exemple D:\MySourceFolder\ or D:\My Backup Folder.
        /// </summary>
        internal static string ASK_SOURCE_DIRECTORY {
            get {
                return ResourceManager.GetString("ASK_SOURCE_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please write &apos;y&apos; if you desire to stop the timer..
        /// </summary>
        internal static string ASK_STOP_TIMER {
            get {
                return ResourceManager.GetString("ASK_STOP_TIMER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please insert the time between backupsin this format: dd-hh-mm. Example 01-24-59.
        /// </summary>
        internal static string ASK_TIME_INTERVAL {
            get {
                return ResourceManager.GetString("ASK_TIME_INTERVAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, review  your entry and submit it again..
        /// </summary>
        internal static string ASK_TIME_INTERVAL_ERROR {
            get {
                return ResourceManager.GetString("ASK_TIME_INTERVAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete.
        /// </summary>
        internal static string DELETE {
            get {
                return ResourceManager.GetString("DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, enter a choice 1 -  .
        /// </summary>
        internal static string ENTER_CHOICE {
            get {
                return ResourceManager.GetString("ENTER_CHOICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Please press any key to go back to go back to the Menu.&quot;.
        /// </summary>
        internal static string GO_TO_MENU {
            get {
                return ResourceManager.GetString("GO_TO_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Please press &quot;ENTER&quot; to cancel Timer and go back to the Menu.&quot;.
        /// </summary>
        internal static string GO_TO_MENU_DISPOSE {
            get {
                return ResourceManager.GetString("GO_TO_MENU_DISPOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please press &quot;y&quot; to go back to menu anywhere it&apos;s asking for input in this page..
        /// </summary>
        internal static string GO_TO_MENU_START_BACKUP {
            get {
                return ResourceManager.GetString("GO_TO_MENU_START_BACKUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SyncGuardian is a periodic backup solution.In order to start the backup or your files you need to proceed to give the necessary information as: 
        ///
        ///1. Link to the folder that contains your files 
        ///2. Link to the new folder that will have the backup files 
        ///3.the time interval that you want SyncGuardian to verify if there&apos;s any backup to do
        ///
        ///For the Links, in there&apos;s any folder or file in it that has spaces, use &quot;&quot; around the link: &quot;C:\Users\Carlos Silva\My Files&quot;
        ///For the time interval, it needs to have t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSTRUCTIONS {
            get {
                return ResourceManager.GetString("INSTRUCTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to n.
        /// </summary>
        internal static string NO {
            get {
                return ResourceManager.GetString("NO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong selection. Please enter a number between 1 and {0}..
        /// </summary>
        internal static string WRONG_ENTRY {
            get {
                return ResourceManager.GetString("WRONG_ENTRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to y.
        /// </summary>
        internal static string YES {
            get {
                return ResourceManager.GetString("YES", resourceCulture);
            }
        }
    }
}
